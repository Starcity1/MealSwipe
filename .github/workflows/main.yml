name: Build and Deploy

on:
  push:
    branches:
      - main
      - dev-david-ci-cd

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-1
      CDK_STACK: MealSwipeAppStack
      ECR_BACKEND_REPO: mealswipe/backend-repo
      ECR_FRONTEND_REPO: mealswipe/frontend-repo
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Root Dependencies and Build Docker Images
        run: |
          # Build backend Docker image
          docker build -t $ECR_BACKEND_REPO:latest ./backend
          # Build frontend Docker image
          docker build -t $ECR_FRONTEND_REPO:latest ./frontend_web

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $(aws sts get-caller-identity --query Account --output text).dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Tag and Push Backend Docker Image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          docker tag $ECR_BACKEND_REPO:latest $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_BACKEND_REPO:latest
          docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_BACKEND_REPO:latest

      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-west-1 | docker login --username AWS --password-stdin public.ecr.aws/p4z9s9e4

      - name: Tag and Push Frontend Docker Image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          docker tag $ECR_FRONTEND_REPO:latest public.ecr.aws/p4z9s9e4/mealswipe/$ECR_FRONTEND_REPO:latest
          docker push public.ecr.aws/p4z9s9e4/mealswipe/$ECR_FRONTEND_REPO:latest

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Install CDK Dependencies
        working-directory: infra
        run: npm install

      - name: Deploy CDK Stack
        working-directory: infra
        run: |
          npx cdk deploy $CDK_STACK --require-approval never
